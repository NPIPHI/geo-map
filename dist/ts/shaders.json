{ "polygon": { "type": "Polygon", "fragment": "#version 300 es\r\n\r\nin lowp vec3 fragColor;\r\nout lowp vec3 color;\r\n\r\nvoid main(){\r\n    color = fragColor;\r\n}", "vertex": "#version 300 es\r\n\r\nin vec2 vertexPosition;\r\nin vec3 vertexColor;\r\nuniform mat3 VIEW;\r\n\r\nout vec3 fragColor;\r\n\r\nvoid main(){\r\n    vec3 transforedPosition = VIEW * vec3(vertexPosition.x, vertexPosition.y, 1);\r\n    gl_Position = vec4(transforedPosition, 1);\r\n    fragColor = vertexColor;\r\n}", "attributes": ["vertexPosition", "vertexColor"], "uniforms": ["VIEW"] }, "outline": { "type": "Outline", "fragment": "#version 300 es\r\n\r\nin lowp vec3 fragColor;\r\nout lowp vec3 color;\r\n\r\nvoid main(){\r\n    color = fragColor;\r\n}", "vertex": "#version 300 es\r\n\r\nin vec2 vertexPosition;\r\nin vec2 vertexNormal;\r\nin lowp int vertexStyle;\r\n\r\nuniform vec4[128] STYLETABLE; //r g b thickness\r\nuniform mat3 VIEW;\r\n\r\nout vec3 fragColor;\r\n\r\nvoid main(){\r\n    float thickness = STYLETABLE[vertexStyle].w;\r\n    vec3 transforedPosition = VIEW * vec3(vertexPosition.x + vertexNormal.x * thickness, vertexPosition.y + vertexNormal.y * thickness, 1);\r\n    gl_Position = vec4(transforedPosition, 1);\r\n    fragColor = STYLETABLE[vertexStyle].xyz;\r\n}", "attributes": ["vertexPosition", "vertexNormal", "vertexStyle"], "uniforms": ["STYLETABLE", "VIEW"] } }
